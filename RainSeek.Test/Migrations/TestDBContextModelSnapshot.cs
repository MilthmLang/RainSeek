// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RainSeed.Tests.Application;

#nullable disable

namespace RainSeed.Tests.Migrations
{
    [DbContext(typeof(TestDBContext))]
    partial class TestDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("RainSeed.Tests.Application.TokenEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("token");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Token" }, "token_index")
                        .IsUnique();

                    b.ToTable("tokens");
                });

            modelBuilder.Entity("RainSeed.Tests.Application.TokensDocumentsEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("DocumentId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("document_id");

                    b.Property<int>("EndPosition")
                        .HasColumnType("INTEGER")
                        .HasColumnName("end_position");

                    b.Property<int>("StartPosition")
                        .HasColumnType("INTEGER")
                        .HasColumnName("start_position");

                    b.Property<long>("TokenId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("token_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DocumentId", "TokenId" }, "document_id_token_id");

                    b.HasIndex(new[] { "TokenId", "DocumentId" }, "token_id_document_id");

                    b.HasIndex(new[] { "TokenId", "DocumentId", "StartPosition", "EndPosition" }, "unique");

                    b.ToTable("tokens_documents");
                });
#pragma warning restore 612, 618
        }
    }
}
